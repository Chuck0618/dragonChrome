// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_math from "rescript/lib/es6/js_math.js";
import * as LeaferUi from "leafer-ui";

function appname(param) {
  return "my name is dragon";
}

var leaferJsConfig_width = 600;

var leaferJsConfig_height = 400;

var leaferJsConfig = {
  view: window,
  width: leaferJsConfig_width,
  height: leaferJsConfig_height
};

var leafer = new LeaferUi.Leafer(leaferJsConfig);

var x_offset = [
  850,
  894,
  938,
  982,
  1026,
  1070
];

var fillContainer = [];

var fillDefault_offset = {
  x: 0,
  y: 0
};

var fillDefault = {
  type: "image",
  url: "./src/dragon.png",
  mode: "clip",
  offset: fillDefault_offset
};

function fillx(x1) {
  var f_offset = {
    x: -x1 | 0,
    y: 2
  };
  var f = {
    type: "image",
    url: "./src/dragon.png",
    mode: "clip",
    offset: f_offset
  };
  fillContainer.push(f);
}

x_offset.forEach(fillx);

fillContainer.forEach(function (x) {
      console.log(x);
    });

var dragonState = {
  y: 168,
  vy: 0.0,
  state: {
    TAG: /* Stop */2,
    _0: 5
  },
  ay: 0.20,
  y0: 166,
  x0: 20
};

var dragonSoulRect = new LeaferUi.Rect({
      x: dragonState.x0,
      y: dragonState.y0,
      width: 39,
      height: 56,
      fill: fillContainer[0],
      draggable: false
    });

leafer.add(dragonSoulRect);

setInterval((function (param) {
        var ind = dragonState.state;
        switch (ind.TAG | 0) {
          case /* Run */0 :
              var v = ind._0 === 2 ? 3 : 2;
              dragonState.state = {
                TAG: /* Run */0,
                _0: v
              };
              return ;
          case /* Jump */1 :
          case /* Stop */2 :
              return ;
          
        }
      }), 200);

function updatePosition(param) {
  dragonState.y = dragonState.y + Js_math.floor_int(dragonState.vy) | 0;
  dragonState.vy = dragonState.vy + dragonState.ay;
  if (dragonState.y >= dragonState.y0) {
    dragonState.y = dragonState.y0;
    dragonState.vy = 0.0;
    dragonState.state = {
      TAG: /* Run */0,
      _0: 2
    };
    return ;
  }
  
}

function updateDragon(param) {
  var ind = dragonState.state;
  switch (ind.TAG | 0) {
    case /* Jump */1 :
        updatePosition(undefined);
        dragonSoulRect.y = dragonState.y;
        dragonSoulRect.fill = fillContainer[ind._0];
        return ;
    case /* Run */0 :
    case /* Stop */2 :
        dragonSoulRect.fill = fillContainer[ind._0];
        return ;
    
  }
}

var offsetObstructSmall = [
  {
    x: 262,
    y: 2
  },
  {
    x: 292,
    y: 2
  }
];

var offsetObstructLarge = [
  {
    x: 331,
    y: 2
  },
  {
    x: 351,
    y: 2
  }
];

var fillContainerTreeSmall = [];

var fillContainerTreeLarge = [];

function push(ct, cor) {
  var f_offset = {
    x: -cor.x | 0,
    y: -cor.y | 0
  };
  var f = {
    type: "image",
    url: "./src/dragon.png",
    mode: "clip",
    offset: f_offset
  };
  ct.push(f);
}

offsetObstructSmall.forEach(function (cor) {
      push(fillContainerTreeSmall, cor);
    });

offsetObstructLarge.forEach(function (param) {
      return push(fillContainerTreeLarge, param);
    });

var obsStateDate = {
  x1: 100,
  y1: 182,
  x2: 400,
  y2: 168,
  isStart: false,
  vx: 0.0
};

var treeRectSmall = new LeaferUi.Rect({
      x: obsStateDate.x1,
      y: obsStateDate.y1,
      width: 18,
      height: 40,
      fill: fillContainerTreeSmall[0],
      draggable: false
    });

var treeRectLarge = new LeaferUi.Rect({
      x: obsStateDate.x2,
      y: obsStateDate.y2,
      width: 25,
      height: 54,
      fill: fillContainerTreeLarge[0],
      draggable: false
    });

leafer.add(treeRectSmall);

leafer.add(treeRectLarge);

obsStateDate.vx = -3.0;

obsStateDate.isStart = true;

function updateTree(param) {
  if (!obsStateDate.isStart) {
    return ;
  }
  obsStateDate.x1 = obsStateDate.x1 + Js_math.floor_int(obsStateDate.vx) | 0;
  obsStateDate.x2 = obsStateDate.x2 + Js_math.floor_int(obsStateDate.vx) | 0;
  if (obsStateDate.x1 < -10) {
    var w = 600;
    var width = w !== undefined ? w : 600;
    obsStateDate.x1 = width + Js_math.random_int(0, 500) | 0;
    if (obsStateDate.x1 > (obsStateDate.x2 - 10 | 0) && obsStateDate.x1 < (obsStateDate.x2 + 30 | 0)) {
      obsStateDate.x1 = (obsStateDate.x2 + 30 | 0) + Js_math.random_int(0, 500) | 0;
    }
    
  }
  if (obsStateDate.x2 < -10) {
    var w$1 = 600;
    var width$1 = w$1 !== undefined ? w$1 : 600;
    obsStateDate.x2 = width$1 + Js_math.random_int(0, 500) | 0;
    if (obsStateDate.x2 > (obsStateDate.x1 - 10 | 0) && obsStateDate.x2 < (obsStateDate.x1 + 30 | 0)) {
      obsStateDate.x2 = (obsStateDate.x1 + 30 | 0) + Js_math.random_int(0, 500) | 0;
    }
    
  }
  treeRectSmall.x = obsStateDate.x1;
  treeRectLarge.x = obsStateDate.x2;
}

var roadStateDate = {
  isStart: false,
  x1: 0,
  x2: 1200,
  vx: -3
};

var roadSoul_offset = {
  x: 0,
  y: -53
};

var roadSoul = {
  type: "image",
  url: "./src/dragon.png",
  mode: "clip",
  offset: roadSoul_offset
};

var road_01 = new LeaferUi.Rect({
      x: 0,
      y: 200,
      width: 1200,
      height: 12,
      fill: roadSoul,
      draggable: false
    });

var road_02 = new LeaferUi.Rect({
      x: 1200,
      y: 200,
      width: 1200,
      height: 12,
      fill: roadSoul,
      draggable: false
    });

leafer.add(road_01);

leafer.add(road_02);

roadStateDate.isStart = true;

function updateRoad(param) {
  if (roadStateDate.isStart) {
    roadStateDate.x1 = roadStateDate.x1 + roadStateDate.vx | 0;
    roadStateDate.x2 = roadStateDate.x2 + roadStateDate.vx | 0;
    if (roadStateDate.x1 < -1200) {
      roadStateDate.x1 = roadStateDate.x2 + 1200 | 0;
    }
    if (roadStateDate.x2 < -1200) {
      roadStateDate.x2 = roadStateDate.x1 + 1200 | 0;
    }
    road_01.x = roadStateDate.x1;
    road_02.x = roadStateDate.x2;
    return ;
  }
  
}

leafer.on_(LeaferUi.AnimateEvent.FRAME, (function (param) {
        updateDragon(undefined);
        updateRoad(undefined);
        updateTree(undefined);
      }));

function jumpTask(param) {
  dragonState.vy = -6.0;
  dragonState.state = {
    TAG: /* Jump */1,
    _0: 0
  };
  console.log("Time up!");
}

function captureCommand(param) {
  var match = dragonState.state;
  switch (match.TAG | 0) {
    case /* Run */0 :
        return jumpTask(undefined);
    case /* Jump */1 :
        return ;
    case /* Stop */2 :
        dragonState.state = {
          TAG: /* Run */0,
          _0: 2
        };
        return ;
    
  }
}

leafer.on_(LeaferUi.PointerEvent.DOWN, (function (param) {
        captureCommand(undefined);
      }));

var rectTimeDuration = 200;

var roadRangeMax = 1200;

export {
  appname ,
  leaferJsConfig ,
  leafer ,
  x_offset ,
  fillContainer ,
  fillDefault ,
  fillx ,
  dragonState ,
  dragonSoulRect ,
  rectTimeDuration ,
  updatePosition ,
  updateDragon ,
  offsetObstructSmall ,
  offsetObstructLarge ,
  fillContainerTreeSmall ,
  fillContainerTreeLarge ,
  push ,
  obsStateDate ,
  treeRectSmall ,
  treeRectLarge ,
  updateTree ,
  roadRangeMax ,
  roadStateDate ,
  roadSoul ,
  road_01 ,
  road_02 ,
  updateRoad ,
  jumpTask ,
  captureCommand ,
}
/* leaferJsConfig Not a pure module */
